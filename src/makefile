CC=gcc
CFLAGS=-Wall -Werror -Wextra -std=c11 -c

SOURCE_DIRECTORIES=s21_strlen s21_strcmp

DEPENDENCY_DIRECTORY=dependencies
BUILD_DIRECTORY=build

# TARGET=$(BUILD_DIRECTORY)/graph.exe
TARGET_TEST=$(BUILD_DIRECTORY)/s21_string_test.out


# OBJECT_MAIN=$(BUILD_DIRECTORY)/graph.o
OBJECT_MAIN_TEST=$(BUILD_DIRECTORY)/s21_string_test.o

ALL_TESTS_IN_ONE_FILE=$(BUILD_DIRECTORY)/s21_string_test.check

ALL_TESTS_IN_ONE_FILE_GENERATED=$(BUILD_DIRECTORY)/s21_string_test.c

SOURCE_FILES_ALL=$(foreach directory_as_variable, $(SOURCE_DIRECTORIES),$(wildcard $(directory_as_variable)/*.c))
# SOURCE_FILES=$(filter-out %_test.c, $(SOURCE_FILES_ALL))
# SOURCE_FILES_TESTS=$(filter %_test.c, $(SOURCE_FILES_ALL))
SOURCE_FILES_TESTS=$(foreach directory_as_variable, $(SOURCE_DIRECTORIES),$(wildcard $(directory_as_variable)/*.check))
# SOURCE_FILES_TESTS=$(notdir $(SOURCE_FILES_TESTS))



OBJECT_FILES_ALL_IN_SOURCE_DIRECTORIES=$(patsubst %.c,%.o,$(SOURCE_FILES_ALL))
OBJECT_FILES_ALL_IN_BUILD_DIRECTORIES=$(addprefix $(BUILD_DIRECTORY)/,$(OBJECT_FILES_ALL_IN_SOURCE_DIRECTORIES))


OBJECT_FILES_TESTS_IN_SOURCE_DIRECTORIES=$(patsubst %.c,%.o,$(SOURCE_FILES_TESTS))
OBJECT_FILES_TESTS_IN_BUILD_DIRECTORIES=$(addprefix $(BUILD_DIRECTORY)/,$(OBJECT_FILES_TESTS_IN_SOURCE_DIRECTORIES))


OBJECT_FILES_IN_SOURCE_DIRECTORIES=$(patsubst %.c,%.o,$(SOURCE_FILES))
OBJECT_FILES_IN_BUILD_DIRECTORIES=$(addprefix $(BUILD_DIRECTORY)/,$(OBJECT_FILES_IN_SOURCE_DIRECTORIES))


DEPENDENCY_FILES_ALL_IN_SOURCE_DIRECTORIES=$(patsubst %.c,%.d,$(SOURCE_FILES_ALL))
DEPENDENCY_FILES_ALL_IN_DEPENDENCY_DIRECTORIES=$(addprefix $(DEPENDENCY_DIRECTORY)/,$(DEPENDENCY_FILES_ALL_IN_SOURCE_DIRECTORIES))
DEPENDENCY_FILES_ALL_IN_DEPENDENCY_DIRECTORIES+=$(DEPENDENCY_DIRECTORY)/graph.d

DEPENDENCY_DIRECTORIES=$(dir $(DEPENDENCY_FILES_ALL_IN_DEPENDENCY_DIRECTORIES))

DEPFLAGS=-MT $@ -MMD -MP -MF $(DEPENDENCY_DIRECTORY)/$*.d



run: all
		$(TARGET)


all: $(TARGET)


run_test: test
		$(TARGET_TEST)


test: $(TARGET_TEST)


unite_tests: $(ALL_TESTS_IN_ONE_FILE)


generate_all_tests: $(ALL_TESTS_IN_ONE_FILE_GENERATED)


$(ALL_TESTS_IN_ONE_FILE_GENERATED): $(ALL_TESTS_IN_ONE_FILE)
		checkmk $< > $@


$(TARGET): $(OBJECT_FILES_IN_BUILD_DIRECTORIES) $(OBJECT_MAIN)
		$(CC) -o $@ $^


$(TARGET_TEST): $(OBJECT_FILES_IN_BUILD_DIRECTORIES) $(OBJECT_MAIN_TEST) $(OBJECT_FILES_TESTS_IN_BUILD_DIRECTORIES) 
		$(CC) -o $@ $^



# $(OBJECT_MAIN): graph.c $(DEPENDENCY_DIRECTORY)/graph.d | $(DEPENDENCY_DIRECTORY)
# mkdir -p $(DEPENDENCY_DIRECTORY)/$(dir $*)
# $(CC) $(CFLAGS) -o $@ $< -MT $@ -MMD -MP -MF $(DEPENDENCY_DIRECTORY)/graph.d


# $(OBJECT_MAIN_TEST): graph.c $(DEPENDENCY_DIRECTORY)/graph.d | $(DEPENDENCY_DIRECTORY)
# mkdir -p $(DEPENDENCY_DIRECTORY)/$(dir $*)
# $(CC) $(CFLAGS) -D TEST_GRAPH_ -o $@ $<  -MT $@ -MMD -MP -MF $(DEPENDENCY_DIRECTORY)/graph.d


$(ALL_TESTS_IN_ONE_FILE): $(SOURCE_FILES_TESTS)
		mkdir -p $(dir $@)
		touch $(notdir $@)
		cat $^ >> $@


$(OBJECT_FILES_ALL_IN_BUILD_DIRECTORIES): $(BUILD_DIRECTORY)/%.o: %.c $(DEPENDENCY_DIRECTORY)/%.d | $(DEPENDENCY_DIRECTORY)
		mkdir -p $(dir $@)
		mkdir -p $(DEPENDENCY_DIRECTORY)/$(dir $*)
		$(CC) $(CFLAGS) $< -o $@ $(DEPFLAGS)


$(DEPENDENCY_DIRECTORY):
		mkdir -p $(DEPENDENCY_DIRECTORY)


$(DEPENDENCY_FILES_ALL_IN_DEPENDENCY_DIRECTORIES):





clean: 
		rm -rf $(BUILD_DIRECTORY)/* $(DEPENDENCY_DIRECTORY)/*


print:
		echo $(SOURCE_FILES_TESTS)
		echo $(notdir $(SOURCE_FILES_TESTS))



include $(wildcard $(DEPENDENCY_FILES_ALL_IN_DEPENDENCY_DIRECTORIES))