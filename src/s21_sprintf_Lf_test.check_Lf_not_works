#include <string.h>
#include <stdio.h>
#include "s21_string.h"

// Used here to remove the following warning - "warning: implicit declaration of function s21_sprintf"
int s21_sprintf(char *buffer, const char *format, ...);




// OVERFLAW
//#test s21_sprintf_test_Lf_range_0
//    const double input_double = 1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890.0; // 100 digits before '.'
//    const char *format = "%5.Lf!%5.Lf Hello, World %4.Lf!%6.Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);
//
//
//#test s21_sprintf_test_Lf_range_1
//    const double input_double = -1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890.0; // 100 digits before '.'
//    const char *format = "%5.Lf!%5.Lf Hello, World %4.Lf!%6.Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_width_default_precision_0
    const double input_double = 123.0123456789;
    const char *format = "%5.Lf!%5.Lf Hello, World %4.Lf!%6.Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_0
    const double input_double = 12.0;
    const char *format = "%Lf!%Lf Hello, World %Lf!%Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_1
    const double input_double = -12.0;
    const char *format = "%Lf!%Lf Hello, World %Lf!%Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_2
    const double input_double = -12.0123456789;
    const char *format = "%Lf!%Lf Hello, World %Lf!%Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_2_1
    const double input_double = -12.01234544444449;
    const char *format = "%Lf!%Lf Hello, World %Lf!%Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_3
    const double input_double = 98765.00123456789;
    const char *format = "%Lf!%Lf Hello, World %Lf!%Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_4
    const double input_double = 98765.123456789;
    const char *format = "%Lf!%Lf Hello, World %.0Lf!%.0Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_5
    const double input_double = 98765.123456789;
    const char *format = "%.Lf!%.Lf Hello, World %.Lf!%.Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_6
    const double input_double = 98765.123456789;
    const char *format = "%.1Lf!%.3Lf Hello, World %.2Lf!%.4Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_7
    const double input_double = -98765.123456789;
    const char *format = "%.1Lf!%.3Lf Hello, World %.2Lf!%.4Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_8
    const double input_double = -98765.123456789;
    const char *format = "%.6Lf!%.9Lf Hello, World %.6Lf!%.9Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_9
    const double input_double = -98765.123456789;
    const char *format = "%.10Lf!%.11Lf Hello, World %.11Lf!%.11Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_10
    const double input_double = -12.01234567890123456;
    const char *format = "%.13Lf!%.13Lf Hello, World %.13Lf!%.13Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


//  LONG LONG INT OVERFLAW


//#test s21_sprintf_test_Lf_11
//    const double input_double = -9876543210.01234567890123456;
//    const char *format = "%.13Lf!%.13Lf Hello, World %.13Lf!%.13Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_0
    const double input_double = -12.01;
    const char *format = "%0.4Lf!%0.5Lf Hello, World %0.6Lf!%0.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_1
    const double input_double = 12.01;
    const char *format = "%0.4Lf!%0.5Lf Hello, World %0.6Lf!%0.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_2
    const double input_double = 12.013;
    const char *format = "%2.4Lf!%1.5Lf Hello, World %2.6Lf!%1.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_3
    const double input_double = 12.013;
    const char *format = "%6.4Lf!%6.5Lf Hello, World %6.6Lf!%6.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_4
    const double input_double = 12.013;
    const char *format = "%10.4Lf!%16.5Lf Hello, World %26.6Lf!%36.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_5
    const double input_double = 12.013;
    const char *format = "%-10.4Lf!%-16.5Lf Hello, World %-26.6Lf!%-36.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_sign_0
    const double input_double = 12.013;
    const char *format = "%+-10.4Lf!%+-16.5Lf Hello, World %+-26.6Lf!%+-36.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_sign_1
    const double input_double = -12.013;
    const char *format = "%+-10.4Lf!%+-16.5Lf Hello, World %+-26.6Lf!%+-36.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_sign_2
    const double input_double = -12.013;
    const char *format = "%-+10.4Lf!%+-16.5Lf Hello, World %+-26.6Lf!%+-36.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_sign_3
    const double input_double = -123456.0123456789;
    const char *format = "%-+30.4Lf!%+-36.5Lf Hello, World %+-46.6Lf!%+-56.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_sign_4
    const double input_double = 123456.0123456789;
    const char *format = "%-+30.4Lf!%+-36.5Lf Hello, World %+-46.6Lf!%+-56.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


/////////////////////////////


#test s21_sprintf_test_Lf_width_precision_0
    const double input_double = 123.012345;
    const char *format = "%-+5.7Lf!%+-5.9Lf Hello, World %+-4.11Lf!%+-6.7Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_precision_1
    const double input_double = 123.012345;
    const char *format = "%5.12Lf!%5.13Lf Hello, World %4.11Lf!%6.11Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);















#test s21_sprintf_test_Lf_width_default_precision_1
    const double input_double = 123.0123456789;
    const char *format = "%5.0Lf!%5.0Lf Hello, World %4.0Lf!%6.0Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_default_precision_3
    const double input_double = 123.0123456789;
    const char *format = "%5Lf!%5Lf Hello, World %4Lf!%6Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_width_default_precision_4
    const double input_double = 123.0123456789;
    const char *format = "%25.Lf!%25.Lf Hello, World %24.Lf!%26.Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_default_precision_5
    const double input_double = 123.0123456789;
    const char *format = "%25.0Lf!%25.0Lf Hello, World %24.0Lf!%26.0Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);


#test s21_sprintf_test_Lf_width_default_precision_6
    const double input_double = 123.0123456789;
    const char *format = "%25Lf!%25Lf Hello, World %24Lf!%26Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



// CAN NOT COMPILED WITH FLAGS
//#test s21_sprintf_test_Lf_width_default_precision_7
//    const double input_double = 123.0123456789;
//    const char *format = "%5.-10Lf!%5.-12Lf Hello, World %4.-15Lf!%6.-19Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);


// CAN NOT COMPILED WITH FLAGS
//#test s21_sprintf_test_Lf_width_default_precision_8
//    const double input_double = 123.0123456789;
//    const char *format = "%5.-0Lf!%5.-0Lf Hello, World %4.-0Lf!%6.-0Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);


// CAN NOT COMPILED WITH FLAGS
//#test s21_sprintf_test_Lf_width_default_precision_8_1
//    const double input_double = 123.0123456789;
//    const char *format = "%5.-Lf!%5.-Lf Hello, World %4.-Lf!%6.-Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);










#test s21_sprintf_test_Lf_width_default_precision_9
    const double input_double = -123.0123456789;
    const char *format = "%5Lf!%5Lf Hello, World %4Lf!%6Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);



#test s21_sprintf_test_Lf_width_default_precision_10
    const double input_double = -123.0123456789;
    const char *format = "%25.Lf!%25.Lf Hello, World %24.Lf!%26.Lf";

    char s21_buffer[1000];
    memset(s21_buffer, 'a', 1000);
    char buffer[1000];
    memset(buffer, 'a', 1000);

    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
    
    ck_assert_str_eq(s21_buffer, buffer);
    ck_assert_int_eq(s21_result, result);

// CAN NOT COMPILED WITH FLAGS
//#test s21_sprintf_test_Lf_width_default_precision_11
//    const double input_double = 123.012345678901;
//    const char *format = "%25.-0Lf!%25.-0Lf Hello, World %24.-0Lf!%26.-0Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);


//#test s21_sprintf_test_Lf_width_default_precision_12
//    const double input_double = -123.0123456789;
//    const char *format = "%25Lf!%25Lf Hello, World %24Lf!%26Lf";
//
//    char s21_buffer[1000];
//    memset(s21_buffer, 'a', 1000);
//    char buffer[1000];
//    memset(buffer, 'a', 1000);
//
//    const int s21_result = s21_sprintf(s21_buffer, format, input_double, input_double, input_double, input_double);
//    const int result = sprintf(buffer, format, input_double, input_double, input_double, input_double);
//    
//    ck_assert_str_eq(s21_buffer, buffer);
//    ck_assert_int_eq(s21_result, result);